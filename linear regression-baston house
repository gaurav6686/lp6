Linear regression by using Deep Neural network: Implement Boston housing price prediction problem by network. 
Use Boston House price Prediction dataset.

import pandas as pd 
import numpy as np
from sklearn import metrics import matplotlib.pyplot as plt import seaborn as sns %matplotlib inline

from sklearn.datasets import fetch_openml boston fetch openml(name="boston,
version=1)

data pd.DataFrame(boston.data) data.head()

data.columns = boston.feature names

data.head()

data[PRICE] = boston.target

data.shape

data.columnis

data.dtypes

data.nunuque()

data.isnull().sum()

data[data.isnull().any(axis=1)]

data.describe()

corr = data.corr()

corr.shape

plt.figure(figsize=(20,20))

sns.heatmap(corr, cbar=True, square True, fmt.lf, annot=True, annot_kws={"size":15}, cmap="Greens')

X = data.drop([PRICE], axis = 1)

y = data['PRICE]

from sklearn.model selection import train test split

X train, X test, y train, y test = train test split(X,y, test size = 0.3, random state = 4)

from sklearn.linear model import LinearRegression

lm = LinearRegression()

Im.fit(X train, y train)

lm.intercept

coeffcients = pd.DataFrame([X train.columns,lm.coef]).T

coeffcients = coeffcients.rename(columns={0: Attribute, 1 Coefficients'))
coeffcients

y_pred model.predict(X test)

mse_nn = mean_squared_error(y_test, y pred nn)

mae nn mean absolute error(y test, y pred nn)

print("Mean Squared Error:, mse nn) 
print('Mean Absolute Error:, mae nn)

